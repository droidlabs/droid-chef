# <%= @app_name %> - <%= @web_urls %>
server {
  listen 80<%= ' default' if @default %>;
  client_max_body_size 4G;
  server_name <%= @web_urls %>;
  root /data/<%= @app_name %>/current/public;

  # Block bots who like track urls (php usually)
  location ~ \.php$ {
    deny  all;
  }
  location = /500.html {
    root /data/<%= @app_name %>/current/public;
  }
  location ~ ^/assets/.*\.(jpg|jpeg|png|bmp|gif|css|js|svg|woff|otf|ttf)$  {
    root /data/<%= @app_name %>/current/public;

    <%- if node[:nginx][:gzip] %>
      gzip_static on;
      gzip_http_version 1.0;
    <% end -%>

    expires max;
    add_header Cache-Control public;
    add_header Access-Control-Allow-Origin *;

    error_page 404 /404.html;
  }

  location /nginx_stub_status {
    stub_status on;
  }

  passenger_enabled on;
  passenger_min_instances <%= @app_workers %>;
  <%- if node[:nginx][:passenger][:enterprise] %>
  passenger_ruby <%= @ruby_dir %>/bin/ruby;
  <% end -%>

  rails_env <%= @app_env %>;

  access_log  /data/<%= @app_name %>/shared/log/nginx.access.log;
  error_log   /data/<%= @app_name %>/shared/log/nginx.error.log;
}
<% if @ssl_support %>
server {
  listen 443;
  client_max_body_size 4G;
  server_name <%= @web_urls %>;
  root /data/<%= @app_name %>/current/public;

  # Block bots who like track urls (php usually)
  location ~ \.php$ {
    deny  all;
  }
  location = /500.html {
    root /data/<%= @app_name %>/current/public;
  }
  location ~ ^/assets/.*\.(jpg|jpeg|png|bmp|gif|css|js|svg|woff|otf|ttf)$  {
    root /data/<%= @app_name %>/current/public;

    <%- if node[:nginx][:gzip] %>
      gzip_static on;
      gzip_http_version 1.0;
    <% end -%>

    expires max;
    add_header Cache-Control public;
    add_header Access-Control-Allow-Origin *;

    error_page 404 /404.html;
  }

  passenger_enabled on;
  passenger_min_instances 1;
  <%- if node[:nginx][:passenger][:enterprise] %>
  passenger_ruby <%= @ruby_dir %>/bin/ruby;
  <% end -%>

  rails_env <%= @app_env %>;

  access_log  /data/<%= @app_name %>/shared/log/nginx.access.log;
  error_log   /data/<%= @app_name %>/shared/log/nginx.error.log;
  ssl on;
  ssl_certificate <%= node[:nginx][:path] %>/ssl/<%= @app_name %>.crt;
  ssl_certificate_key <%= node[:nginx][:path] %>/ssl/<%= @app_name %>.key;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';
  ssl_prefer_server_ciphers on;

  # enable session resumption to improve https performance
  # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 5m;
}
<% end %>